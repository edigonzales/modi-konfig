import java.nio.file.Paths
import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.*
import de.undercouch.gradle.tasks.download.Download

apply plugin: 'ch.so.agi.gretl'
apply plugin: 'de.undercouch.download'

defaultTasks 'uploadToExoscale'

// Ich kann es nicht nur Ã¼ber die Zauber-Properties machen,
// da DuckDB die Credentials als AWS-Env-Vars erwartet.
def awsAccessKey = System.getenv("AWS_ACCESS_KEY_ID")
def awsSecretAccessKey = System.getenv("AWS_SECRET_ACCESS_KEY")
def awsRegion = System.getenv("AWS_DEFAULT_REGION")
def awsEndpoint = System.getenv("AWS_ENDPOINT_URL")

tasks.register('foo') {
    doLast {
        println 'Hallo Welt.'
        println awsAccessKey
        println awsSecretAccessKey
        println awsRegion
        println awsEndpoint
    }
}

tasks.register("createStammdatenSchema", Ili2duckdbImportSchema) {
    dbfile = file("shubidu.duckdb")
    models = "SO_AGI_Metadaten_20250202"
    modeldir = rootProject.projectDir.toString() + "/../../_ili/" + ";http://models.interlis.ch"
    dbschema = "stammdaten"
    nameByTopic = true
    smart2Inheritance = true
    createEnumTabs = true
}

tasks.register("importStammdaten", Ili2duckdbImport) {
    dependsOn 'createStammdatenSchema'
    dbfile = file("shubidu.duckdb")
    models = "SO_AGI_Metadaten_20250202"
    modeldir = rootProject.projectDir.toString() + "/../../_ili/" + ";http://models.interlis.ch"
    dbschema = "stammdaten"
    dataFile = file("../../_stammdaten/amt.xtf")
}

tasks.register("createKonfigSchema", Ili2duckdbImportSchema) {
    dependsOn 'importStammdaten'
    dbfile = file("shubidu.duckdb")
    models = "SO_AGI_Metadaten_20250202"
    modeldir = rootProject.projectDir.toString() + "/../../_ili/" + ";http://models.interlis.ch"
    dbschema = "konfig"
    nameByTopic = true
    smart2Inheritance = true
    createEnumTabs = true
}

def pwd = rootProject.projectDir.toString()
def dbUri = "jdbc:duckdb:$pwd/shubidu.duckdb".toString()
def dbUser = ""
def dbPass = ""

tasks.register("createKonfigData", SqlExecutor) {
    dependsOn 'createKonfigSchema'
    database = [dbUri, dbUser, dbPass]
    sqlFiles = ['create_konfig_data.sql']
}

tasks.register("exportKonfigData", Ili2duckdbExport) {
    dependsOn 'createKonfigData'
    dbfile = file("shubidu.duckdb")
    models = "SO_AGI_Metadaten_20250202"
    modeldir = rootProject.projectDir.toString() + "/../../_ili/" + ";http://models.interlis.ch"
    dbschema = "konfig"
    dataFile = file("themen_publikation.xtf")
}

tasks.register('uploadToExoscale', S3Upload) {
    dependsOn 'exportKonfigData'
    accessKey = awsAccessKey
    secretKey = awsSecretAccessKey
    sourceFile = file('themen_publikation.xtf')
    endPoint = awsEndpoint
    region = awsRegion
    bucketName = 'ch.so.agi.fubar1'
    acl = "public-read"
}
